// always do not tamper head
class Node{
    int data;
    Node next;
    
    Node(int data1,Node next1){
        this.data=data1;
        this.next=next1;
    }
    Node(int data1){
        this.data=data1;
        this.next=null;
    }
    
}
public class Main{
    private static Node convert(int arr[]){            // converting an array method
        Node head=new Node(arr[0]);    
        Node mover=head;
        
        for(int i=1;i<arr.length;i++){
            Node temp=new Node(arr[i]);
            mover.next=temp;    // accessing next and referencing 
            mover=temp;         // updating
        }
        return head;            // cannot return LL, so just head
    }
private static int Length(Node head){
        int cnt=0;                                 //length of LL function
        Node temp=head;
        while(temp!=null){
            temp=temp.next;
            cnt++;
        }
        return cnt;
    }
    public static void main(String[] args){
    int arr[]={12, 4, 7, 1};
    
    Node head=convert(arr);
    
    System.out.println(head);
    System.out.print(head.data);
        
    Node temp=head;                             //Transversal of LL
    while(temp!=null){
        System.out.print(temp.data+" ");
        temp=temp.next;
        }

        System.out.println();
    
      System.out.print(Length(head));       // head must be initialized
    } 
}
