/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode middleNode(ListNode head) {
        ListNode temp=head;
        int cnt=0;
        while(temp!=null){
            cnt++;                            // to find Length of LL
            temp=temp.next;
        }
        int midNode=(cnt/2)+1;              // find midNode(int)

         temp=head;
        while(temp!=null){
            midNode--;                   // reduce midNode
            if(midNode==0){              // once it reach zero, midNode is reached(common sense)
                break;
            }
            temp=temp.next;
        }
        return temp;                 // return the current temp after break of loop
    }
}
