---One Optimised Solution------------
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode ans=new ListNode(-1);                            // ans LL
        ListNode temp=ans; 
        int carry=0;               // for eliminating unit digit

        while(l1!=null || l2!=null){      // till both become null
            int sum=0;
            if(l1!=null){
                sum+=l1.val;         // first go with l1 and add to sum                                 Complexity=O(max(l1,l2),O(max(l1,l2)
                l1=l1.next;
            }
            if(l2!=null){
                sum+=l2.val;           // second go with l2 and add to the same sum
                l2=l2.next;
            }
            sum+=carry;              // simulataneously update sum and carry in every cycle
            carry=sum/10;
            ListNode unit=new ListNode(sum%10);          // create nodes to put unit digits
            temp.next=unit;                                 // link with the ans node(temp)
            temp=temp.next;

            if(carry!=0){                           // if left over carry, put in a new Node and link with "ans" Node
                ListNode last=new ListNode(carry);
                temp.next=last;                      //link
            }
        }
 
        return ans.next;                    // the head of ansLL
    }
}
